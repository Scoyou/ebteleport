#!/usr/bin/env ruby
# frozen_string_literal: true

require 'json'
require 'tty-prompt'

def execute_ssh(bitnami_ip, instance)
  name = instance[:name]
  ipaddr = instance[:ipaddr]
  puts "\n\n~~~ sshing you into #{name} at #{ipaddr} ~~~"
  puts "use 'echo -en \"\\e[?25h\"' to unhide cursor\n\n"

  bitnami_ssh = "ssh -i ~/.ssh/Bridge_Data_Migration.pem -t bitnami@#{bitnami_ip} "
  instance_ssh = "\"ssh -i .ssh/Bridge_Data_Migration.pem -t ec2-user@#{ipaddr}\""

  command = bitnami_ssh + instance_ssh
  exec(command)
end

def show_env_instances(mapping, environment)
  prompt = TTY::Prompt.new

  bitnami_ip = environment == 'production' ? '3.139.81.57' : '52.15.231.12'

  prompt.select('Select Instance') do |menu|
    mapping
      .flatten
      .sort_by { |m| m[:name] }.select { |m| m[:environment] == environment }
      .each { |item| menu.choice "#{item[:name]} - #{item[:ipaddr]}", -> { execute_ssh(bitnami_ip, item) } }
  end
end

results = `aws-vault exec bridge-custom-dev -- aws ec2 describe-instances`

mapping = JSON(results)['Reservations'].map do |r|
  r['Instances'].map do |i|
    name = i['Tags'].select { |t| t['Key'] == 'Name' }.first['Value']
    env = name[/Staging/] ? 'staging' : 'production'
    ip = i['PrivateIpAddress']
    { environment: env, name: name, ipaddr: ip }
  end
end

env_prompt = TTY::Prompt.new
env_prompt.select('Select Environment') do |env_menu|
  env_menu.choice 'Production', -> { show_env_instances(mapping, 'production') }
  env_menu.choice ' Staging', -> { show_env_instances(mapping, 'staging') }
end
